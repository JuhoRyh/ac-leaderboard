{"version":3,"sources":["components/RecordCard.js","pages/Track.js","components/AddRecord.js","components/TrackCard.js","components/Leaderboards.js","pages/Home.js","components/Header.js","App.js","index.js"],"names":["RecordCard","props","useState","car","setCar","useEffect","axios","get","record","carId","then","res","data","ms","undefined","className","username","laptime","Math","floor","toFixed","brand","name","width","src","Track","trackId","useParams","records","setRecords","track","setTrack","conf","setConf","all","spread","firstRes","secondRes","console","log","desc","configuration","map","onClick","confId","layout","length","filter","_id","AddRecord","setBrand","minutes","setMinutes","seconds","setSeconds","mSeconds","setMSeconds","setUsername","onSubmit","event","preventDefault","parseInt","recordObject","post","onChange","newTrack","tracks","find","target","value","chosenBrand","cars","brands","includes","push","getBrands","model","type","TrackCard","href","Leaderboard","Home","setCars","setTracks","Header","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.068a83c7.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\nconst RecordCard = (props) => {\r\n  const [car, setCar] = useState()\r\n  \r\n  useEffect(() => {\r\n    axios.get(`/api/cars/${props.record.carId}`).then(res => {\r\n      setCar(res.data[0])})\r\n  },[])\r\n\r\n  const getLapTime = (ms) => {\r\n    var minutes = Math.floor(ms/60000)\r\n    var seconds = ((ms % 60000) / 1000).toFixed(0)\r\n    var milliseconds = ms % 1000\r\n    return minutes + \":\" + seconds + \".\" + milliseconds\r\n  }\r\n\r\n  if(car !== undefined){\r\n    return(\r\n      <div className=\"w-screen md:w-1/2 flex flex-row justify-between shadow-xl\">\r\n        <div className=\"m-auto\">\r\n          <p className=\"text-xl text-left\">{props.record.username}</p>\r\n          <h4 className=\"text-3xl text-left\">{getLapTime(props.record.laptime)}</h4>\r\n          <p>{car.brand} {car.name}</p>\r\n          \r\n        </div>\r\n        <div>\r\n          <img width=\"355\" src={`/images/cars/${car.carId}.jpg`} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }else{\r\n    return(<div></div>)\r\n  }\r\n}\r\n\r\nexport default RecordCard","import { useParams } from 'react-router-dom'\r\nimport React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport RecordCard from '../components/RecordCard'\r\n\r\nconst Track = () => {\r\n  const {trackId} = useParams() \r\n  const [records, setRecords] = useState([])\r\n  const [track, setTrack] = useState()\r\n  const [conf, setConf] = useState(1)\r\n  \r\n  useEffect(() => {\r\n    axios.all([axios.get(`/api/tracks/${trackId}`), axios.get(`/api/records/${trackId}`)]).then(axios.spread((firstRes, secondRes) => {\r\n      setTrack(firstRes.data[0])\r\n      console.log(firstRes.data)\r\n      setRecords(secondRes.data)\r\n    }))\r\n  },[])\r\n\r\n  const clickHandler = (confId) => {\r\n    setConf(confId)\r\n  }\r\n\r\n  console.log(conf)\r\n\r\n  if(track !== undefined){\r\n    return(\r\n    <div className=\"flex flex-col items-center\">\r\n       <div className=\"w-screen md:w-1/2 flex flex-row justify-between border-2\">\r\n         <div className=\"m-auto\">\r\n           <h2 className=\"text-3xl text-center\">{track.name}</h2>\r\n           <p className=\"text-center\">{track.desc}</p>\r\n          </div>\r\n          <img width=\"355\" className=\"float-right\" src={`/images/tracks/${track.trackId}.png`} />\r\n        </div>\r\n        <div className=\"flex\">\r\n        {track.configuration.map(conf => <button className=\"p-4 bg-blue-300 m-2 rounded-lg hover:bg-blue-500\" onClick={() => clickHandler(conf.confId)}>{conf.layout}</button>)}\r\n        </div>\r\n       {records.length > 0 ? records.filter(record => record.confId === conf).map(record => {return <RecordCard key={record._id} record={record} />}) : <p>No Records yet</p>}\r\n    </div>\r\n  )\r\n    }else{\r\n      return(<div></div>)\r\n    }\r\n}\r\n\r\nexport default Track","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst AddRecord = (props) => {\r\n  const [car, setCar] = useState()\r\n  const [track, setTrack] = useState()\r\n  const [conf, setConf] = useState()\r\n  const [brand, setBrand] = useState()\r\n  const [minutes, setMinutes] = useState()\r\n  const [seconds, setSeconds] = useState()\r\n  const [mSeconds, setMSeconds] = useState()\r\n  const [username, setUsername] = useState('')\r\n\r\n  const getBrands = (cars) => {\r\n    var brands = []\r\n    cars.map(car => {\r\n      if(!brands.includes(car.brand)){\r\n        brands.push(car.brand)\r\n      }\r\n    })\r\n    return brands\r\n  }\r\n\r\n  const trackHandler = (event) => {\r\n    const newTrack = props.tracks.find(track => track.trackId === parseInt(event.target.value))\r\n    setTrack(newTrack)\r\n  }\r\n\r\n  const carHandler = (event) => {\r\n    setCar(event.target.value)\r\n  }\r\n\r\n  const confHandler = (event) => {\r\n    setConf(event.target.value)\r\n  }\r\n\r\n  const brandHandler = (event) => {\r\n    const chosenBrand = props.cars.filter(car => car.brand == event.target.value)\r\n    setBrand(chosenBrand)\r\n  }\r\n  \r\n  const minuteHandler = (event) => {\r\n    setMinutes(event.target.value)\r\n  }\r\n\r\n  const secondHandler = (event) => {\r\n    setSeconds(event.target.value)\r\n  }\r\n\r\n  const msHandler = (event) => {\r\n    setMSeconds(event.target.value)\r\n  }\r\n\r\n  const usernameHandler = (event) => {\r\n    setUsername(event.target.value)\r\n  }\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault()\r\n    const laptime = parseInt(minutes) * 60000 + parseInt(seconds) * 1000 + parseInt(mSeconds)\r\n    const recordObject = {\r\n      username: username,\r\n      carId: parseInt(car),\r\n      trackId: track.trackId,\r\n      confId: parseInt(conf),\r\n      laptime: laptime\r\n    }\r\n\r\n    axios.post('/api/records', recordObject)\r\n    \r\n    setSeconds(0)\r\n    setMSeconds(0)\r\n    setMinutes(0)\r\n    setUsername('')\r\n  } \r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center\">\r\n      <form onSubmit={submitHandler} className=\"bg-gray-300 p-6 mb-6 rounded-lg\">\r\n        <div className=\"grid grid-cols-2\">\r\n          <label>\r\n            Track:\r\n            <br />\r\n            <select className=\"w-full mb-4\" onChange={trackHandler}>\r\n              <option></option>\r\n              {props.tracks.map(track => {return <option key={track.trackId} value={track.trackId}>{track.name}</option>})}\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Layout:\r\n            <br />\r\n            <select className=\"w-full\" onChange={confHandler}>\r\n              <option></option>\r\n              {track === undefined || track === null ? null : track.configuration.map(conf => {return <option key ={conf.confId} value={conf.confId}>{conf.layout}</option>})}\r\n            </select>\r\n          </label>\r\n        </div>\r\n        <div className=\"grid grid-cols-2\">\r\n          <label>\r\n            Brand:\r\n            <br />\r\n            <select className=\"w-full\" onChange={brandHandler}>\r\n              <option></option>\r\n              {getBrands(props.cars).map(brand => {return <option key={brand} value={brand}>{brand}</option>})}\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Model:\r\n            <br />\r\n            <select className=\"w-full mb-4\" onChange={carHandler}>\r\n              <option></option>\r\n              {brand === undefined || brand === null ? null : brand.map(model => {return <option key={model.carId} value={model.carId}>{model.name}</option>})}\r\n            </select>\r\n          </label>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 mb-4 justify-items-between\">\r\n          <div className=\"m-4\">\r\n          <label>\r\n            Minutes:\r\n            <br/>\r\n            <input type=\"text\" value={minutes} onChange={minuteHandler} />\r\n          </label>\r\n          </div>\r\n          <div className=\"m-4\">\r\n          <label>\r\n            Seconds:\r\n            <br/>\r\n            <input type=\"text\" value={seconds} onChange={secondHandler} />\r\n          </label>\r\n          </div>\r\n          <div className=\"m-4\">          \r\n          <label>\r\n            Milliseconds:\r\n            <br />\r\n            <input type=\"text\" value={mSeconds} onChange={msHandler} />\r\n          </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"ml-24 mr-24 mb-4\">\r\n          <label>\r\n            Username:\r\n            <br />\r\n            <input className=\"w-full\" type=\"text\" value={username} onChange={usernameHandler} />\r\n          </label>\r\n        </div>\r\n        <div className=\"grid grid-cols-1\">\r\n          <button className=\"h-12 px-6 m-2 text-lg text-blue-100 bg-blue-600 rounded-lg hover:bg-blue-700\" type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddRecord","import React from 'react'\r\n\r\nconst TrackCard = (props) => {\r\n\r\n  return(\r\n    <div className=\"shadow-lg p-4\">\r\n      <a href={`/track/${props.track.trackId}`}>\r\n      <div>\r\n        <img src={`/images/tracks/${props.track.trackId}.png`} />\r\n        <h2 className=\"text-2xl\">{props.track.name}</h2>\r\n        <h4 className=\"text-sm\">{props.track.desc}</h4>\r\n      </div>\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TrackCard","import React from 'react'\r\nimport TrackCard from '../components/TrackCard'\r\n\r\nconst Leaderboard = (props) => {\r\n  return(\r\n    <div className=\"flex flex-col items-center\">\r\n      <h3 className=\"text-5xl\">Leaderboards</h3>\r\n      <div className=\"grid grid-cols-2 md:grid-cols-3\">\r\n      {props.tracks.map(track => {\r\n        return <TrackCard key={track.trackId} track={track} />\r\n      })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Leaderboard","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport AddRecord from '../components/AddRecord'\r\nimport LeaderBoards from '../components/Leaderboards'\r\n\r\nconst Home = () => {\r\n  const [cars, setCars] = useState([])\r\n  const [tracks, setTracks] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.all([axios.get('/api/tracks'), axios.get('/api/cars')]).then(axios.spread((firstRes, secondRes) => {\r\n      setTracks(firstRes.data)\r\n      setCars(secondRes.data)\r\n    }))\r\n  }, [])\r\n\r\n  if (tracks.length > 1 && cars.length > 1) {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <AddRecord cars={cars} tracks={tracks} />\r\n          <LeaderBoards tracks={tracks} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return (<div></div>)\r\n  }\r\n}\r\n\r\nexport default Home","import React from 'react'\r\n\r\nconst Header = () => {\r\n  return(\r\n    <div className=\"mt-4 mb-4\">\r\n      <a href='/'>\r\n        <h1 className=\"text-center text-3xl font-bold\">AC Hotlap Leaderboards</h1>\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom'\nimport Track from './pages/Track'\nimport Home from './pages/Home'\nimport Header from './components/Header'\nimport './index.css'\n\nconst App = () => {\n  return(\n    <Router>\n      <div>\n        <Header />\n        <Switch>\n          <Route path=\"/track/:trackId\" >\n            <Track />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}